[General]
network = FlowMeasurementShowcase
sim-time-limit = 5s

**.crcMode = "computed"
**.fcsMode = "computed"
#**.arp.typename = "GlobalArp"

*.*.ethernet.typename = "EthernetLayer"

*.client*.numApps = 2
*.client*.app[*].typename = "UdpApp"
*.client*.app[0].source.packetNameFormat = "background-%c"
*.client*.app[1].source.packetNameFormat = "video-%c"
*.client*.app[0].io.destAddress = "server1"
*.client*.app[1].io.destAddress = "server2"
*.client*.app[*].io.destPort = 1000

# background ~40Mbps
*.client*.app[0].source.packetLength = 1000B
*.client*.app[0].source.productionInterval = truncnormal(200us,100us)

# video ~2Mbps
*.client*.app[1].source.packetLength = 500B
*.client*.app[1].source.productionInterval = truncnormal(2ms,1ms)

# server*
*.server*.numApps = 1
*.server*.app[0].typename = "UdpApp"
*.server*.app[0].source.typename = "EmptyPacketSource"
*.server*.app[0].io.destPort = -1
*.server*.app[0].io.localPort = 1000

# interface
*.*.eth[*].typename = "LayeredEthernetInterface"
*.*.eth[*].bitrate = 100Mbps
*.switch*.eth[*].measurementLayer.typename = "MeasurementLayer"
*.switch1.eth[*].measurementLayer.measurementMaker.typename = "OmittedPacketFlow"
*.switch2.eth[*].measurementLayer.measurementStarter.typename = "OmittedPacketFlow"
*.*.eth[*].phyLayer.*Emitter.typename = "OmittedPacketFlow"

# visualizer
*.visualizer.packetFlowVisualizer.displayRoutes = true
*.visualizer.interfaceTableVisualizer.displayInterfaceTables = true
*.visualizer.interfaceTableVisualizer.format = "%N %\\%a/%l%\\%m"

#**.displayInterfaceTables = true

[Config Default]
description = "Measuring elapsed time and queueing time"

# timing measurement
*.client1.app[*].outbound.typename = "FlowMeasurementStarter"
*.client1.app[*].outbound.flowName = "client1"
*.client1.app[*].outbound.measure = "elapsedTime or queueingTime"
*.client2.app[*].outbound.typename = "FlowMeasurementStarter"
*.client2.app[*].outbound.flowName = "client2"
*.client2.app[*].outbound.measure = "elapsedTime or queueingTime"
*.server1.app[*].inbound.typename = "FlowMeasurementRecorder"
*.server1.app[*].inbound.flowName = "client1 or client2"
*.server1.app[*].inbound.measure = "elapsedTime or queueingTime"
*.server2.app[*].inbound.typename = "FlowMeasurementRecorder"
*.server2.app[*].inbound.flowName = "client1 or client2"
*.server2.app[*].inbound.measure = "elapsedTime or queueingTime"
*.switch1.eth[*].measurementLayer.measurementStarter.flowName = "switch1"
*.switch1.eth[*].measurementLayer.measurementStarter.measure = "elapsedTime or queueingTime"
*.switch2.eth[*].measurementLayer.measurementMaker.flowName = "switch1"
*.switch2.eth[*].measurementLayer.measurementMaker.measure = "elapsedTime or queueingTime"

[Config AddingMeasurementLayer]

*.client1.ipv4.typename = "MyInheritedIpv4NetworkLayer"

*.client1.ipv4.measurementLayer.typename = "MeasurementLayer"

*.client1.ipv4.measurementLayer.measurementStarter.flowName = "client1ip"
*.client1.ipv4.measurementLayer.measurementStarter.measure = "elapsedTime or queueingTime"

*.server1.ipv4.typename = "MyInheritedIpv4NetworkLayer"

*.server1.ipv4.measurementLayer.typename = "MeasurementLayer"

*.server1.ipv4.measurementLayer.measurementMaker.flowName = "client1ip"
*.server1.ipv4.measurementLayer.measurementMaker.measure = "elapsedTime or queueingTime"

[Config Frag]
extends = Default

**.mtu = 500B

#**.eth*.mac.mtu = 500B

*.client1.ipv4.typename = "MyIpv4NetworkLayer"
*.client1.ipv4.interfaceTableModule = "^.interfaceTable"

[Config Frag2]
extends = Default

#**.mtu = 500B				# TODO this should work

#**.eth*.mac.mtu = 500B

*.client1.ipv4.typename = "MyInheritedIpv4NetworkLayer"
#*.client1.ipv4.interfaceTableModule = "^.interfaceTable"

*.client1.ipv4.measurementLayer.typename = "MeasurementLayer"
#*.client1.ipv4.measurementLayer.measurementStarter.typename = "OmittedPacketFlow"
#*.client1.ipv4.measurementLayer.measurementMaker.typename = "OmittedPacketFlow"

*.client1.ipv4.measurementLayer.measurementStarter.flowName = "client1ip"
*.client1.ipv4.measurementLayer.measurementStarter.measure = "elapsedTime or queueingTime"

*.server1.ipv4.typename = "MyInheritedIpv4NetworkLayer"
#*.client1.ipv4.interfaceTableModule = "^.interfaceTable"

*.server1.ipv4.measurementLayer.typename = "MeasurementLayer"

*.server1.ipv4.measurementLayer.measurementMaker.flowName = "client1ip"
*.server1.ipv4.measurementLayer.measurementMaker.measure = "elapsedTime or queueingTime"

[Config Frag3]
extends = Frag2

[Config PacketEvent]

# timing measurement
*.client1.app[*].outbound.typename = "FlowMeasurementStarter"
*.client1.app[*].outbound.flowName = "client1"
*.client1.app[*].outbound.measure = "packetEvent"
*.client2.app[*].outbound.typename = "FlowMeasurementStarter"
*.client2.app[*].outbound.flowName = "client2"
*.client2.app[*].outbound.measure = "packetEvent"
*.server1.app[*].inbound.typename = "FlowMeasurementRecorder"
*.server1.app[*].inbound.flowName = "client1 or client2"
*.server1.app[*].inbound.measure = "packetEvent"
*.server2.app[*].inbound.typename = "FlowMeasurementRecorder"
*.server2.app[*].inbound.flowName = "client1 or client2"
*.server2.app[*].inbound.measure = "packetEvent"
*.switch1.eth[*].measurementLayer.measurementStarter.flowName = "switch1"
*.switch1.eth[*].measurementLayer.measurementStarter.measure = "packetEvent"
*.switch2.eth[*].measurementLayer.measurementMaker.flowName = "switch1"
*.switch2.eth[*].measurementLayer.measurementMaker.measure = "packetEvent"

[Config BetweenSwitches]

# timing measurement
*.client1.app[*].outbound.typename = "FlowMeasurementStarter"
*.client1.app[*].outbound.flowName = "client1"
*.client1.app[*].outbound.measure = "elapsedTime or queueingTime"
*.client2.app[*].outbound.typename = "FlowMeasurementStarter"
*.client2.app[*].outbound.flowName = "client2"
*.client2.app[*].outbound.measure = "elapsedTime or queueingTime"
*.server1.app[*].inbound.typename = "FlowMeasurementRecorder"
*.server1.app[*].inbound.flowName = "client1 or client2"
*.server1.app[*].inbound.measure = "elapsedTime or queueingTime"
*.server2.app[*].inbound.typename = "FlowMeasurementRecorder"
*.server2.app[*].inbound.flowName = "client1 or client2"
*.server2.app[*].inbound.measure = "elapsedTime or queueingTime"
*.switch1.eth[*].measurementLayer.measurementStarter.flowName = "switch1"
*.switch1.eth[*].measurementLayer.measurementStarter.measure = "elapsedTime or queueingTime"
*.switch1.eth[*].measurementLayer.measurementStarter.packetDataFilter = "srcAddress ~= 10.0.0.1"
*.switch2.eth[*].measurementLayer.measurementMaker.flowName = "switch1"
*.switch2.eth[*].measurementLayer.measurementMaker.measure = "elapsedTime or queueingTime"

[Config Default2]
extends = Default

*.client1.app[*].outbound.measure = "elapsedTime or queueingTime or delayingTime or processingTime or transmissionTime or propagationTime"
*.client2.app[*].outbound.measure = "elapsedTime or queueingTime or delayingTime or processingTime or transmissionTime or propagationTime"
*.server1.app[*].inbound.measure = "elapsedTime or queueingTime  or delayingTime or processingTime or transmissionTime or propagationTime"
*.server2.app[*].inbound.measure = "elapsedTime or queueingTime  or delayingTime or processingTime or transmissionTime or propagationTime"
*.switch1.eth[*].measurementLayer.measurementStarter.measure = "elapsedTime or queueingTime  or delayingTime or processingTime or transmissionTime or propagationTime"
*.switch2.eth[*].measurementLayer.measurementMaker.measure = "elapsedTime or queueingTime  or delayingTime or processingTime or transmissionTime or propagationTime"

[Config Multi]

*.switch*.eth[*].measurementLayer.typename = "MultiMeasurementLayer"
*.switch*.eth[*].measurementLayer.numMeasurementModules = 4

[Config MultiAsk]
*.switch*.eth[*].measurementLayer.typename = "MultiMeasurementLayer"
*.switch*.eth[*].measurementLayer.numMeasurementModules = ask

[Config MultiDefault]
description = "Measuring elapsed time and queueing time"

*.switch*.eth[*].measurementLayer.typename = "MultiMeasurementLayer"
*.switch*.eth[*].measurementLayer.numMeasurementModules = 2
*.switch1.eth[*].measurementLayer.measurementMaker[*].typename = "OmittedPacketFlow"
*.switch2.eth[*].measurementLayer.measurementStarter[*].typename = "OmittedPacketFlow"

# timing measurement
*.client1.app[*].outbound.typename = "FlowMeasurementStarter"
*.client1.app[*].outbound.flowName = "client1"
*.client1.app[*].outbound.measure = "elapsedTime or queueingTime"
*.client2.app[*].outbound.typename = "FlowMeasurementStarter"
*.client2.app[*].outbound.flowName = "client2"
*.client2.app[*].outbound.measure = "elapsedTime or queueingTime"
*.server1.app[*].inbound.typename = "FlowMeasurementRecorder"
*.server1.app[*].inbound.flowName = "client1 or client2"
*.server1.app[*].inbound.measure = "elapsedTime or queueingTime"
*.server2.app[*].inbound.typename = "FlowMeasurementRecorder"
*.server2.app[*].inbound.flowName = "client1 or client2"
*.server2.app[*].inbound.measure = "elapsedTime or queueingTime"
*.switch1.eth[*].measurementLayer.measurementStarter[0].flowName = "switch1"
*.switch1.eth[*].measurementLayer.measurementStarter[0].measure = "elapsedTime or queueingTime"
*.switch2.eth[*].measurementLayer.measurementMaker[0].flowName = "switch1"
*.switch2.eth[*].measurementLayer.measurementMaker[0].measure = "elapsedTime or queueingTime"

*.switch1.eth[*].measurementLayer.measurementStarter[1].flowName = "switch1-BG"
*.switch1.eth[*].measurementLayer.measurementStarter[1].packetFilter = "byteLength =~ 1042"
*.switch1.eth[*].measurementLayer.measurementStarter[1].measure = "elapsedTime or queueingTime"
*.switch2.eth[*].measurementLayer.measurementMaker[1].flowName = "switch1-BG"
*.switch1.eth[*].measurementLayer.measurementMaker[1].packetFilter = "byteLength =~ 1042"
*.switch2.eth[*].measurementLayer.measurementMaker[1].measure = "elapsedTime or queueingTime"

[Config MultiDefault2]
description = "Measuring elapsed time and queueing time"

*.switch*.eth[*].measurementLayer.typename = "MultiMeasurementLayer"
*.switch*.eth[*].measurementLayer.numMeasurementModules = 2
*.switch1.eth[*].measurementLayer.measurementMaker[*].typename = "OmittedPacketFlow"
*.switch2.eth[*].measurementLayer.measurementStarter[*].typename = "OmittedPacketFlow"

# timing measurement
*.client1.app[*].outbound.typename = "FlowMeasurementStarter"
*.client1.app[*].outbound.flowName = "client1"
*.client1.app[*].outbound.measure = "elapsedTime or queueingTime"
*.client2.app[*].outbound.typename = "FlowMeasurementStarter"
*.client2.app[*].outbound.flowName = "client2"
*.client2.app[*].outbound.measure = "elapsedTime or queueingTime"
*.server1.app[*].inbound.typename = "FlowMeasurementRecorder"
*.server1.app[*].inbound.flowName = "client1 or client2"
*.server1.app[*].inbound.measure = "elapsedTime or queueingTime"
*.server2.app[*].inbound.typename = "FlowMeasurementRecorder"
*.server2.app[*].inbound.flowName = "client1 or client2"
*.server2.app[*].inbound.measure = "elapsedTime or queueingTime"
*.switch1.eth[*].measurementLayer.measurementStarter[0].flowName = "switch1-VID"
*.switch1.eth[*].measurementLayer.measurementStarter[0].measure = "elapsedTime or queueingTime"
*.switch1.eth[*].measurementLayer.measurementStarter[0].packetFilter = "byteLength =~ 542"
*.switch2.eth[*].measurementLayer.measurementMaker[0].flowName = "switch1-VID"
*.switch1.eth[*].measurementLayer.measurementMaker[0].packetFilter = "byteLength =~ 542"
*.switch2.eth[*].measurementLayer.measurementMaker[0].measure = "elapsedTime or queueingTime"

*.switch1.eth[*].measurementLayer.measurementStarter[1].flowName = "switch1-BG"
*.switch1.eth[*].measurementLayer.measurementStarter[1].packetFilter = "byteLength =~ 1042"
*.switch1.eth[*].measurementLayer.measurementStarter[1].measure = "elapsedTime or queueingTime"
*.switch2.eth[*].measurementLayer.measurementMaker[1].flowName = "switch1-BG"
*.switch1.eth[*].measurementLayer.measurementMaker[1].packetFilter = "byteLength =~ 1042"
*.switch2.eth[*].measurementLayer.measurementMaker[1].measure = "elapsedTime or queueingTime"

[Config SameFlow]

*.client*.numApps = 2
*.client*.app[*].typename = "UdpBasicApp"
*.client1.app[0].packetName = "c1-background"
*.client1.app[1].packetName = "c1-video"
*.client2.app[0].packetName = "c2-background"
*.client2.app[1].packetName = "c2-video"
*.client*.app[0].destAddresses = "server1 server2"
*.client*.app[1].destAddresses = "server1 server2"
*.client*.app[*].destPort = 1000
*.client*.app[0].localPort = 1000
*.client*.app[1].localPort = 500

*.client*.app[0].messageLength = 1000B
*.client*.app[0].sendInterval = truncnormal(200us,100us)

# video ~2Mbps
*.client*.app[1].messageLength = 500B
*.client*.app[1].sendInterval = truncnormal(2ms,1ms)

#*.client*.eth[*].measurementLayer.typename = "MultiMeasurementLayer"
#*.client*.eth[*].measurementLayer.numMeasurementModules = 2
#*.client*.eth[*].measurementLayer.measurementStarter[0].flowName = "BG"
#*.client*.eth[*].measurementLayer.measurementStarter[0].packetDataFilter = "inet::UdpHeader and srcPort =~ 500"
#*.client*.eth[*].measurementLayer.measurementStarter[1].flowName = "VID"
#*.client*.eth[*].measurementLayer.measurementStarter[1].packetDataFilter = "inet::UdpHeader and srcPort =~ 1000"
#*.client*.eth[*].measurementLayer.measurementStarter[*].measure = "elapsedTime or queueingTime"
#*.client*.eth[*].measurementLayer.measurementMaker[*].typename = "OmittedPacketFlow"
#
#*.server*.eth[*].measurementLayer.typename = "MultiMeasurementLayer"
#*.server*.eth[*].measurementLayer.numMeasurementModules = 2
#*.server*.eth[*].measurementLayer.measurementMaker[0].flowName = "BG"
#*.server*.eth[*].measurementLayer.measurementMaker[0].packetDataFilter = "inet::UdpHeader and srcPort =~ 500"
#*.server*.eth[*].measurementLayer.measurementMaker[1].flowName = "VID"
#*.server*.eth[*].measurementLayer.measurementMaker[1].packetDataFilter = "inet::UdpHeader and srcPort =~ 1000"
#*.server*.eth[*].measurementLayer.measurementMaker[*].measure = "elapsedTime or queueingTime"
#*.server*.eth[*].measurementLayer.measurementStarter[*].typename = "OmittedPacketFlow"
#
#*.switch1.eth[*].measurementLayer.measurementStarter.flowName = "switch1"
#*.switch1.eth[*].measurementLayer.measurementStarter.measure = "elapsedTime or queueingTime"
#*.switch2.eth[*].measurementLayer.measurementMaker.flowName = "switch1"
#*.switch2.eth[*].measurementLayer.measurementMaker.measure = "elapsedTime or queueingTime"

[Config SameFlowTCP]
extends = SameFlow

*.client*.typename = "MyStandardHost"
*.server*.typename = "MyStandardHost"

*.client*.measurementLayer.typename = "MeasurementLayer"
*.server*.measurementLayer.typename = "MeasurementLayer"

*.client*.measurementLayer.flowName = "clientudp"
*.server*.measurementLayer.flowName = "serverudp"

*.client*.app[0].io.localPort = 1000
*.client*.app[1].io.localPort = 500

*.client*.numApps = 4
*.client*.app[2].typename = "TcpClientApp"
*.client*.app[2].io.connectAddress = "server1"
*.client*.app[2].io.connectPort = 1000
*.client*.app[2].io.localPort = 1000
*.client*.app[2].source.productionInterval = uniform(1ms, 200us)
*.client*.app[2].source.packetLength = intuniform(100B, 200B)
*.client*.app[2].source.packetData = intuniform(0, 1)

*.client*.app[3].typename = "TcpClientApp"
*.client*.app[3].io.connectAddress = "server2"
*.client*.app[3].io.connectPort = 1000
*.client*.app[3].io.localPort = 500
*.client*.app[3].source.productionInterval = uniform(1ms, 200us)
*.client*.app[3].source.packetLength = intuniform(100B, 200B)
*.client*.app[3].source.packetData = intuniform(0, 1)

*.server*.numApps = 2
*.server*.app[1].typename = "TcpSinkApp"
*.server*.app[1].localPort = 1000

[Config SameFlowTCPMultiMeasurementModule]
extends = SameFlowTCP

*.client*.measurementLayer.typename = "MultiMeasurementLayer"
*.server*.measurementLayer.typename = "MultiMeasurementLayer"

*.client*.measurementLayer.numMeasurementModules = 2
*.server*.measurementLayer.numMeasurementModules = 2

#*.client*.measurementLayer.flowName = "clientudp"
#*.server*.measurementLayer.flowName = "serverudp"

*.client*.measurementLayer.measurementStarter[0].flowName = "BG"
#*.client*.measurementLayer.measurementStarter[0].packetDataFilter = "inet::UdpHeader and srcPort =~ 500"
*.client*.measurementLayer.measurementStarter[1].flowName = "VID"
#*.client*.measurementLayer.measurementStarter[1].packetDataFilter = "inet::UdpHeader and srcPort =~ 1000"
*.client*.measurementLayer.measurementStarter[*].measure = "elapsedTime or queueingTime"
*.client*.measurementLayer.measurementMaker[*].typename = "OmittedPacketFlow"

*.server*.measurementLayer.measurementMaker[0].flowName = "BG"
#*.server*.measurementLayer.measurementMaker[0].packetDataFilter = "inet::UdpHeader and srcPort =~ 500"
*.server*.measurementLayer.measurementMaker[1].flowName = "VID"
#*.server*.measurementLayer.measurementMaker[1].packetDataFilter = "inet::UdpHeader and srcPort =~ 1000"
*.server*.measurementLayer.measurementMaker[*].measure = "elapsedTime or queueingTime"
*.server*.measurementLayer.measurementStarter[*].typename = "OmittedPacketFlow"
