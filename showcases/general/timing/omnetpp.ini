[General]
network = TimingShowcase
sim-time-limit = 5s

**.crcMode = "computed"
**.fcsMode = "computed"
**.arp.typename = "GlobalArp"

*.*.ethernet.typename = "EthernetLayer"

*.client*.numApps = 2
*.client*.app[*].typename = "UdpApp"
*.client*.app[0].source.packetNameFormat = "background-%c"
*.client*.app[1].source.packetNameFormat = "video-%c"
*.client*.app[0].io.destAddress = "server1"
*.client*.app[1].io.destAddress = "server2"
*.client*.app[*].io.destPort = 1000

# background ~40Mbps
*.client*.app[0].source.packetLength = 1000B
*.client*.app[0].source.productionInterval = truncnormal(200us,100us)

# video ~2Mbps
*.client*.app[1].source.packetLength = 500B
*.client*.app[1].source.productionInterval = truncnormal(2ms,1ms)

# server*
*.server*.numApps = 1
*.server*.app[0].typename = "UdpApp"
*.server*.app[0].source.typename = "EmptyPacketSource"
*.server*.app[0].io.destPort = -1
*.server*.app[0].io.localPort = 1000

# interface
*.*.eth[*].typename = "LayeredEthernetInterface"
*.*.eth[*].bitrate = 100Mbps
*.switch*.eth[*].measurementLayer.typename = "MeasurementLayer"
*.switch1.eth[*].measurementLayer.measurementMaker.typename = "OmittedPacketFlow"
*.switch2.eth[*].measurementLayer.measurementStarter.typename = "OmittedPacketFlow"
*.*.eth[*].phyLayer.*Emitter.typename = "OmittedPacketFlow"

# visualizer
*.visualizer.packetFlowVisualizer.displayRoutes = true
*.visualizer.interfaceTableVisualizer.displayInterfaceTables = true
*.visualizer.interfaceTableVisualizer.format = "%N %\\%a/%l%\\%m"

#**.displayInterfaceTables = true

[Config Default]
description = "Measuring elapsed time and queueing time"

# timing measurement
*.client1.app[*].outbound.typename = "FlowMeasurementStarter"
*.client1.app[*].outbound.flowName = "client1"
*.client1.app[*].outbound.measure = "elapsedTime or queueingTime"
*.client2.app[*].outbound.typename = "FlowMeasurementStarter"
*.client2.app[*].outbound.flowName = "client2"
*.client2.app[*].outbound.measure = "elapsedTime or queueingTime"
*.server1.app[*].inbound.typename = "FlowMeasurementRecorder"
*.server1.app[*].inbound.flowName = "client1 or client2"
*.server1.app[*].inbound.measure = "elapsedTime or queueingTime"
*.server2.app[*].inbound.typename = "FlowMeasurementRecorder"
*.server2.app[*].inbound.flowName = "client1 or client2"
*.server2.app[*].inbound.measure = "elapsedTime or queueingTime"
*.switch1.eth[*].measurementLayer.measurementStarter.flowName = "switch1"
*.switch1.eth[*].measurementLayer.measurementStarter.measure = "elapsedTime or queueingTime"
*.switch2.eth[*].measurementLayer.measurementMaker.flowName = "switch1"
*.switch2.eth[*].measurementLayer.measurementMaker.measure = "elapsedTime or queueingTime"

[Config Frag]
extends = Default

**.mtu = 500B

#**.eth*.mac.mtu = 500B

*.client1.ipv4.typename = "MyIpv4NetworkLayer"
*.client1.ipv4.interfaceTableModule = "^.interfaceTable"

[Config Frag2]
extends = Default

**.mtu = 500B

#**.eth*.mac.mtu = 500B

*.client1.ipv4.typename = "MyInheritedIpv4NetworkLayer"
#*.client1.ipv4.interfaceTableModule = "^.interfaceTable"

*.client1.ipv4.measurementLayer.typename = "MeasurementLayer"
#*.client1.ipv4.measurementLayer.measurementStarter.typename = "OmittedPacketFlow"
#*.client1.ipv4.measurementLayer.measurementMaker.typename = "OmittedPacketFlow"

*.client1.ipv4.measurementLayer.measurementStarter.flowName = "client1"
*.client1.ipv4.measurementLayer.measurementStarter.measure = "elapsedTime or queueingTime"

*.server1.ipv4.typename = "MyInheritedIpv4NetworkLayer"
#*.client1.ipv4.interfaceTableModule = "^.interfaceTable"

*.server1.ipv4.measurementLayer.typename = "MeasurementLayer"

*.server1.ipv4.measurementLayer.measurementMaker.flowName = "client1"
*.server1.ipv4.measurementLayer.measurementMaker.measure = "elapsedTime or queueingTime"

[Config PacketEvent]

# timing measurement
*.client1.app[*].outbound.typename = "FlowMeasurementStarter"
*.client1.app[*].outbound.flowName = "client1"
*.client1.app[*].outbound.measure = "packetEvent"
*.client2.app[*].outbound.typename = "FlowMeasurementStarter"
*.client2.app[*].outbound.flowName = "client2"
*.client2.app[*].outbound.measure = "packetEvent"
*.server1.app[*].inbound.typename = "FlowMeasurementRecorder"
*.server1.app[*].inbound.flowName = "client1 or client2"
*.server1.app[*].inbound.measure = "packetEvent"
*.server2.app[*].inbound.typename = "FlowMeasurementRecorder"
*.server2.app[*].inbound.flowName = "client1 or client2"
*.server2.app[*].inbound.measure = "packetEvent"
*.switch1.eth[*].measurementLayer.measurementStarter.flowName = "switch1"
*.switch1.eth[*].measurementLayer.measurementStarter.measure = "packetEvent"
*.switch2.eth[*].measurementLayer.measurementMaker.flowName = "switch1"
*.switch2.eth[*].measurementLayer.measurementMaker.measure = "packetEvent"

[Config BetweenSwitches]

# timing measurement
*.client1.app[*].outbound.typename = "FlowMeasurementStarter"
*.client1.app[*].outbound.flowName = "client1"
*.client1.app[*].outbound.measure = "elapsedTime or queueingTime"
*.client2.app[*].outbound.typename = "FlowMeasurementStarter"
*.client2.app[*].outbound.flowName = "client2"
*.client2.app[*].outbound.measure = "elapsedTime or queueingTime"
*.server1.app[*].inbound.typename = "FlowMeasurementRecorder"
*.server1.app[*].inbound.flowName = "client1 or client2"
*.server1.app[*].inbound.measure = "elapsedTime or queueingTime"
*.server2.app[*].inbound.typename = "FlowMeasurementRecorder"
*.server2.app[*].inbound.flowName = "client1 or client2"
*.server2.app[*].inbound.measure = "elapsedTime or queueingTime"
*.switch1.eth[*].measurementLayer.measurementStarter.flowName = "switch1"
*.switch1.eth[*].measurementLayer.measurementStarter.measure = "elapsedTime or queueingTime"
*.switch1.eth[*].measurementLayer.measurementStarter.packetDataFilter = "srcAddress ~= 10.0.0.1"
*.switch2.eth[*].measurementLayer.measurementMaker.flowName = "switch1"
*.switch2.eth[*].measurementLayer.measurementMaker.measure = "elapsedTime or queueingTime"

