[General]
network = MixedShaperExample

**.arp.typename = "GlobalArp"

*.*.hasTimeSynchronization = false

# source
*.source.numApps = 2
*.source.app[*].typename = "UdpApp"
*.source.app[0].source.packetNameFormat = "high-priority-%c"
*.source.app[1].source.packetNameFormat = "best-effort-%c"
*.source.app[*].io.destAddress = "destination"
*.source.app[0].io.destPort = 1000
*.source.app[1].io.destPort = 1001

# high priority traffic ~80kbps
*.source.app[0].source.packetLength = 10B
*.source.app[0].source.productionInterval = truncnormal(1ms, 0.1ms)

# best effort traffic ~80Mbps
*.source.app[1].source.packetLength = 1000B
*.source.app[1].source.productionInterval = truncnormal(100us, 10us)

# destination
*.destination.numApps = 2
*.destination.app[*].typename = "UdpSink"
*.destination.app[0].localPort = 1000
*.destination.app[1].localPort = 1001

# configure Ethernet link speed
*.*.eth[*].bitrate = 100Mbps

# configure all egress traffic as part of stream s1, start sequence numbering
*.source.bridging.streamIdentifier.identifier.mapping = [{packetFilter: "*", stream: "s1"}]
# encode egress stream s1 to VLAN 1
*.source.bridging.streamCoder.encoder.mapping = [{stream: "s1", vlan: 1}]

# configure stream decoding
*.switch.bridging.streamCoder.decoder.mapping = [{source: "source", destination: "destination", vlan: 0, stream: "s1"},
                                                 {source: "source", destination: "destination", vlan: 1, stream: "s2"}]

# enable per-stream filtering
*.switch.bridging.streamFilter.ingress.numStreams = 2
*.switch.bridging.streamFilter.ingress.classifier.typename = "StreamClassifier"
*.switch.bridging.streamFilter.ingress.classifier.mapping = {s1: 0, s2: 1}

# configure per-stream metering
*.switch.bridging.streamFilter.ingress.meter[0].typename = "EligibilityTimeMeter"
*.switch.bridging.streamFilter.ingress.meter[0].committedInformationRate = 80kbps
*.switch.bridging.streamFilter.ingress.meter[0].committedBurstSize = 1kB
*.switch.bridging.streamFilter.ingress.meter[0].maxResidenceTime = 2ms
*.switch.bridging.streamFilter.ingress.meter[1].typename = "DualRateThreeColorMeter"
*.switch.bridging.streamFilter.ingress.meter[1].committedInformationRate = 80Mbps
*.switch.bridging.streamFilter.ingress.meter[1].committedBurstSize = 100kB
*.switch.bridging.streamFilter.ingress.meter[1].excessInformationRate = 8Mbps
*.switch.bridging.streamFilter.ingress.meter[1].excessBurstSize = 10kB

# configure per-stream filtering
*.switch.bridging.streamFilter.ingress.filter[0].typename = "EligibilityTimeFilter"
*.switch.bridging.streamFilter.ingress.filter[1].typename = "LabelFilter"

# queueing in TSN ethernet switches
*.switch.eth[*].macLayer.queue.typename = "ShaperPriorityQueue"
*.switch.eth[*].macLayer.queue.numShapers = 2
*.switch.eth[*].macLayer.queue.classifier.typename = "StreamClassifier"
*.switch.eth[*].macLayer.queue.classifier.mapping = {s1: 0, s2: 1}
*.switch.eth[*].macLayer.queue.shaper[0].typename = "AsynchronousShaper"
*.switch.eth[*].macLayer.queue.shaper[1].typename = "CreditBasedShaper"
*.switch.eth[*].macLayer.queue.shaper[1].gate.idleCreditGainRate = 1
*.switch.eth[*].macLayer.queue.shaper[1].gate.transmitCreditSpendRate = 2
